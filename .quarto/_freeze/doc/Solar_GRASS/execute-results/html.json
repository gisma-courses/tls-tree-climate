{
  "hash": "f185a671d82cc83df5939cb5c4af6b66",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Solare Einstrahlung mit GRASS GIS (r.sun.hourly)\"\nauthor: \"Chris Reudenbach, Lena Perzlmaier\"\ndate: \"2025-07-16\"\nformat:\n  html:\n    toc: true\n    toc-depth: 3\n    number-sections: true\n    code-fold: true\n    code-tools: true\nengine: knitr\n---\n\n\n\n\n\n# Introduction\n\nThis tutorial describes how to model hourly solar irradiance using GRASS GIS via `rgrass7` and `link2GI`. The method uses the `r.sun.hourly` module to simulate global radiation hour-by-hour, which is useful for microclimate modeling.\n\n------------------------------------------------------------------------\n\n# Requirements\n\n-   GRASS GIS installed (version 7.8+ or 8.x)\n-   R packages: `link2GI`, `rgrass7`, `terra`\n-   A DTM (e.g., `pred_topo.tif`) including slope/aspect bands\n\n------------------------------------------------------------------------\n\n# 1. Initialize GRASS session\n\n``` r\nlibrary(link2GI)\nlibrary(rgrass7)\n\n# Prepare path to your digital terrain model (DTM)\ndem_path <- file.path(envrmt$path_lidar_raster, \"dem/rasterize_terrain.vrt\")\n\n# Link GRASS to the raster and create new location\nlinkGRASS7(x = rast(dem_path),\n           gisdbase = tempdir(),\n           location = \"microclimate_solar\",\n           override = TRUE)\n```\n\n------------------------------------------------------------------------\n\n# 2. Import data into GRASS\n\n``` r\nexecGRASS(\"r.in.gdal\",\n          flags = c(\"o\", \"overwrite\"),\n          parameters = list(input = dem_path, output = \"dtm\"))\n\nexecGRASS(\"g.region\", parameters = list(raster = \"dtm\"))\n\n# Also import slope and aspect if already precomputed\npred_path <- file.path(envrmt$path_topo, \"pred_topo.tif\")\nexecGRASS(\"r.in.gdal\",\n          flags = c(\"o\", \"overwrite\"),\n          parameters = list(input = pred_path, output = \"pred_topo\"))\n```\n\n------------------------------------------------------------------------\n\n# 3. Install `r.sun.hourly` module (only once)\n\n``` r\nexecGRASS(\"g.extension\", parameters = list(extension = \"r.sun.hourly\"))\n```\n\n------------------------------------------------------------------------\n\n# 4. Run solar irradiance model (example: May 24, all hours)\n\n``` r\nfor (i in 145:145) {  # Day 145 = May 24\n  output <- paste0(\"tot_rad_\", i)\n  execGRASS(\"r.sun.hourly\",\n            flags = c(\"overwrite\", \"quiet\"),\n            parameters = list(\n              elevation = \"pred_topo.1\",\n              slope     = \"pred_topo.2\",\n              aspect    = \"pred_topo.3\",\n              mode = \"mode1\",\n              start_time = 0,\n              end_time = 23,\n              day = i,\n              year = 2018,\n              glob_rad_basename = output\n            ))\n}\n```\n\n-   This creates 24 raster layers: `tot_rad_145_0` through `tot_rad_145_23`\n\n------------------------------------------------------------------------\n\n# 5. Export GRASS raster to GeoTIFF\n\nExample: extract 1 PM layer and save as TIFF\n\n``` r\nexecGRASS(\"r.out.gdal\",\n          flags = c(\"overwrite\"),\n          parameters = list(\n            input = \"tot_rad_145_13\",\n            output = file.path(envrmt$path_topo, \"irradiance_hour13.tif\"),\n            format = \"GTiff\"\n          ))\n```\n\n------------------------------------------------------------------------\n\n# Notes\n\n-   Processing time: \\~3–5 minutes per day (24 hours)\n-   Output resolution matches the DTM\n-   `r.sun.hourly` uses elevation, slope, and aspect\n-   Optional outputs include direct and diffuse radiation (e.g. `beam_rad`, `diff_rad`)\n\n------------------------------------------------------------------------\n\n# Extensions\n\nYou can run this for all 365 days and then:\n\n-   Calculate daily/monthly means using `r.series` in GRASS\n-   Or export all layers and compute summaries in R using `terra::app()`\n",
    "supporting": [
      "Solar_GRASS_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}